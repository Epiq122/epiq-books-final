//package com.gleasondev.epiqbooksbackend.security;////import com.gleasondev.epiqbooksbackend.service.UserDetailsServiceImpl;//import org.springframework.beans.factory.annotation.Autowired;//import org.springframework.context.annotation.Bean;//import org.springframework.context.annotation.Configuration;//import org.springframework.context.annotation.Lazy;//import org.springframework.security.authentication.AuthenticationManager;//import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;//import org.springframework.security.config.annotation.web.builders.HttpSecurity;//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;//import org.springframework.security.config.http.SessionCreationPolicy;//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;//import org.springframework.security.web.SecurityFilterChain;//import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;////@Configuration//@EnableWebSecurity//public class SecurityConfig {////    private final UserDetailsServiceImpl userDetailsService;//    private final JwtAuthenticationEntryPoint unauthorizedHandler;////    @Autowired//    public SecurityConfig(@Lazy UserDetailsServiceImpl userDetailsService, JwtAuthenticationEntryPoint unauthorizedHandler) {//        this.userDetailsService = userDetailsService;//        this.unauthorizedHandler = unauthorizedHandler;//    }////    @Bean//    public JwtAuthenticationFilter jwtAuthenticationFilter() {//        return new JwtAuthenticationFilter();//    }////    @Bean//    public BCryptPasswordEncoder passwordEncoder() {//        return new BCryptPasswordEncoder();//    }////    @Bean//    public AuthenticationManager authenticationManagerBean() throws Exception {//        AuthenticationManagerBuilder builder = new AuthenticationManagerBuilder(null);//        builder.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder());//        return builder.build();//    }////    @Autowired//    public void configure(AuthenticationManagerBuilder auth) throws Exception {//        auth.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder());//    }////    @Bean//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {//        http//                .cors().and().csrf().disable()//                .exceptionHandling()//                .authenticationEntryPoint(unauthorizedHandler)//                .and()//                .sessionManagement()//                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)//                .and()//                .authorizeRequests()//                .antMatchers("/public/**").permitAll()//                .antMatchers("/api/auth/**").permitAll()//                .anyRequest().authenticated()//                .and()//                .formLogin()//                .loginPage("/login")//                .permitAll()//                .and()//                .logout()//                .permitAll();////        http.addFilterBefore(jwtAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);////        return http.build();//    }//}